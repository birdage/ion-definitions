name: discovery

docstring: |
   The Discovery service supports finding resources by metadata attributes, potentially applying semantic reasoning

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+DM+OV+Discovery+Service

dependencies: [resource_registry, catalog_management, index_management]

methods:
  # -----------------
  # Query operations

  query:
    docstring: |
      Issue a query against the indexes as specified in the query, applying filters and operators
      accordingly. The query format is a structured dict.
      See the query format definition: https://confluence.oceanobservatories.org/display/CIDev/Discovery+Service+Query+Format
    in:
      query: {}
      id_only: True
    out:
      results: []

  parse:
    docstring: |
      Parses a given string request and assembles the query, processes the query and returns the results of the query.
      This is the primary means of interfacing with the search features in discovery.
      See the query language definition: https://confluence.oceanobservatories.org/display/CIDev/Discovery+Service+Query+Format
    in:
      search_request: ""
      id_only: True
    out:
      results: []


  # -----------------
  # View management. Views are persisted parameterizable queries

  create_view:
    docstring: |
      Creates a view which has the specified search fields, the order in which the search fields are presented
      to a query and a term filter.
      @param view_name Name of the view
      @param description Simple descriptive sentence
      @param fields Search fields
      @param order List of fields to determine order of precendence in which the results are presented
      @param filter Simple term filter
    in:
      view_name:   ""
      description: ""
      fields:      []
      order:       []
      filters:     ""
    out:
      view_id:     ""

  read_view:
    docstring: Read a View resource
    in:
      view_id:     ""
    out:
      view:        !View

  update_view:
    docstring: Update a View resource
    in:
      view:        !View
    out:
      success:     True
  
  delete_view:
    docstring: Delete a View resource
    in:
      view_id:     ""
    out:
      success:     True
